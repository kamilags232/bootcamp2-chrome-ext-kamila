name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Gatilho para criar release automático: quando uma tag for criada
  push:
    tags:
      - 'v*'    # ao criar tags como v1.0.0

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      - name: Build extension
        run: npm run build
      - name: Run E2E tests
        run: npm run test:e2e
        # se testes falharem, ainda queremos os relatórios
      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
      - name: Upload extension ZIP
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: extension-zip
          path: dist/extension.zip

  release:
    needs: test-build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')  # roda apenas quando for tag v*
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci
      - name: Build extension
        run: npm run build
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: Automated release with extension zip and playwright report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload extension.zip to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: extension.zip
          asset_path: dist/extension.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
